import{_ as t,a as e}from"./chunks/7.CZbNs1pr.js";import{_ as i,c as r,o,ao as l}from"./chunks/framework.vFvoFV1n.js";const n=""+new URL("11.CE6NHMHA.png",import.meta.url).href,s=""+new URL("12.Bzb7eGFa.png",import.meta.url).href,p=""+new URL("13.Y0ytduNM.png",import.meta.url).href,m=""+new URL("14.B_HuWTGN.png",import.meta.url).href,h=""+new URL("15.GaNMZa5N.png",import.meta.url).href,c=""+new URL("16.BtEK3YBo.png",import.meta.url).href,_=""+new URL("17.B9OHf2Ow.png",import.meta.url).href,d=""+new URL("18.DKDDWLza.png",import.meta.url).href,u=""+new URL("19.B3Tf8GUZ.png",import.meta.url).href,f=""+new URL("20.B9BBQYx4.png",import.meta.url).href,g=""+new URL("21.CikvtZHA.png",import.meta.url).href,R=JSON.parse('{"title":"svn使用详解","description":"","frontmatter":{},"headers":[],"relativePath":"version-manage/2svn/3svn使用详解.md","filePath":"version-manage/2svn/3svn使用详解.md"}'),x={name:"version-manage/2svn/3svn使用详解.md"};function v(b,a,k,q,U,w){return o(),r("div",null,a[0]||(a[0]=[l('<h1 id="svn使用详解" tabindex="-1">svn使用详解 <a class="header-anchor" href="#svn使用详解" aria-label="Permalink to &quot;svn使用详解&quot;">​</a></h1><h2 id="checkout-检出操作" tabindex="-1">（Checkout）检出操作 <a class="header-anchor" href="#checkout-检出操作" aria-label="Permalink to &quot;（Checkout）检出操作&quot;">​</a></h2><ul><li>链接到SVN服务器端 <img src="'+t+'" alt=""></li><li>拉取服务端数据到本地 <img src="'+e+'" alt=""> 注意：Checkout只在第一次链接时操作一次，以后如果进行更新操作请使用Update（更新指令）</li></ul><h2 id="commit-提交操作" tabindex="-1">（Commit）提交操作 <a class="header-anchor" href="#commit-提交操作" aria-label="Permalink to &quot;（Commit）提交操作&quot;">​</a></h2><p>将本地修改的代码提交到远程 <img src="'+n+'" alt=""><img src="'+s+'" alt=""><img src="'+p+'" alt=""></p><h2 id="update更新操作" tabindex="-1">（Update更新操作） <a class="header-anchor" href="#update更新操作" aria-label="Permalink to &quot;（Update更新操作）&quot;">​</a></h2><p>将远程修改的代码更新到本地 <img src="'+m+'" alt=""></p><h2 id="忽略功能" tabindex="-1">忽略功能 <a class="header-anchor" href="#忽略功能" aria-label="Permalink to &quot;忽略功能&quot;">​</a></h2><p>有些文件不希望上传至svn服务器，应该将该文件或该类型的文件添加至忽略列表</p><ol><li>忽略某个指定的文件 <img src="'+h+'" alt=""></li><li>忽略某类型文件 <img src="'+c+'" alt=""></li></ol><h2 id="版本回退" tabindex="-1">版本回退 <a class="header-anchor" href="#版本回退" aria-label="Permalink to &quot;版本回退&quot;">​</a></h2><p>有些时候，软件的运行可能使开发者或使用者不满意，这时我们需要把当前版本退回到以前的某个版本。</p><ol><li>在项目空白处鼠标右键，采用如下图所示操作 <img src="'+_+'" alt=""></li><li>根据日志或者版本号进行版本回退 <img src="'+d+'" alt=""></li><li>根据日志信息选择要回退的状态，点击确定即可 <img src="'+u+'" alt=""></li></ol><h2 id="版本冲突" tabindex="-1">版本冲突 <a class="header-anchor" href="#版本冲突" aria-label="Permalink to &quot;版本冲突&quot;">​</a></h2><p>在实际项目开发中，如果两个人同时修改某个文件就会产生版本冲突问题。</p><p>点击commit的时候发现如下错误，有冲突，禁止提交 <img src="'+f+'" alt=""></p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><ol><li>update远程代码到本地 <img src="'+g+'" alt=""></li></ol><ul><li>index.php ：整合后的index.php冲突文件</li><li>index.php.mine ：本地修改后的index.php文件</li><li>index.php.r6 ：index.php的起始文件（最初的）</li><li>index.php.r7 ：另外一位同事修改后的index.php文件</li></ul><ol start="2"><li>删除其他index.php文件，只保留整合后的index.php</li></ol><ul><li>打开index.php文件，手动将冲突解决</li><li>解决之后重新commit即可</li></ul>',21)]))}const B=i(x,[["render",v]]);export{R as __pageData,B as default};
