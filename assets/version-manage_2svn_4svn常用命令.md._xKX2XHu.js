import{_ as a,c as i,ab as n,o as e}from"./chunks/framework.DnBlaP3q.js";const c=JSON.parse('{"title":"svn 的常用命令","description":"","frontmatter":{},"headers":[],"relativePath":"version-manage/2svn/4svn常用命令.md","filePath":"version-manage/2svn/4svn常用命令.md"}'),t={name:"version-manage/2svn/4svn常用命令.md"};function h(l,s,p,k,d,r){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="svn-的常用命令" tabindex="-1">svn 的常用命令 <a class="header-anchor" href="#svn-的常用命令" aria-label="Permalink to &quot;svn 的常用命令&quot;">​</a></h1><h2 id="检出-checkout-co" tabindex="-1">检出 checkout ｜ co <a class="header-anchor" href="#检出-checkout-co" aria-label="Permalink to &quot;检出 checkout ｜ co&quot;">​</a></h2><p>从服务器拉取代码到本地</p><p>格式：svn co [svn 服务器 url] [检出本地的 path]</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> co</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svn://47.106.183.193/helloworld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># svn在检出的时候可以指定用户名和密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> co</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svn://47.106.183.193/helloworld</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --username=xxx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --password=yyy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span></span></code></pre></div><h2 id="添加-add" tabindex="-1">添加 add <a class="header-anchor" href="#添加-add" aria-label="Permalink to &quot;添加 add&quot;">​</a></h2><p>将新增加的文件加入版本控制体系</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span></code></pre></div><h2 id="提交-commit-ci" tabindex="-1">提交 commit | ci <a class="header-anchor" href="#提交-commit-ci" aria-label="Permalink to &quot;提交 commit | ci&quot;">​</a></h2><p>将本地变更的代码提交到 svn 服务器</p><p>格式：svn commit -m &quot;xxx&quot; [文件名]</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;第一次提交&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.txt</span></span></code></pre></div><p>提交完之后，版本号自动增加了 1</p><h2 id="更新-update-up" tabindex="-1">更新 update ｜ up <a class="header-anchor" href="#更新-update-up" aria-label="Permalink to &quot;更新 update ｜ up&quot;">​</a></h2><p>把服务器端文件所产生的所有修改下载到本地</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><h2 id="查看" tabindex="-1">查看 <a class="header-anchor" href="#查看" aria-label="Permalink to &quot;查看&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看版本信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看文件状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看差异</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diff</span></span></code></pre></div><h2 id="版本回退" tabindex="-1">版本回退 <a class="header-anchor" href="#版本回退" aria-label="Permalink to &quot;版本回退&quot;">​</a></h2><ol><li><p>还未提交</p><p>当我们想放弃对文件的修改，可以使用 svn revert 命令，将撤销任何文件或目录里的局部更改，revert 操作不单单可以使单个文件恢复原状， 而且可以使整个目录恢复原状。恢复目录需要携带 -R 参数</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 目录名</span></span></code></pre></div><ol start="2"><li><p>已经提交</p><p>对于已经提交的修改，我们需要使用 merge 命令进行回退，同时需要携带 -r 参数</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 最新版本号:目标版本号</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 目录名或文件名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 如：从版本100 回退到版本99</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100:99</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 目录名或文件名</span></span></code></pre></div><h2 id="冲突解决" tabindex="-1">冲突解决 <a class="header-anchor" href="#冲突解决" aria-label="Permalink to &quot;冲突解决&quot;">​</a></h2><p>当多人开发同一个文件时，我们进行<code>commit</code>或者<code>update</code>的时候，可能会发生冲突</p><p>发生冲突时，我们本地除了原文件会多出三个文件，总共四个文件</p><ul><li>xxx 文件：整合后的 index.php 冲突文件</li><li>xxx.mine 文件 ：发生冲突时本地文件内容</li><li>xxx.r[小版本号]文件 ：发生冲突前文件内容</li><li>xxx.r[大版本号]文件 ：发生冲突时服务器端文件内容</li></ul><p>我们只需要关注 xxx 文件，因为它本身就是整合后的冲突文件，只需要将该文件内的冲突解决完即可，其他三个文件可以删除掉。</p><p>将 xxx 文件内容冲突解决之后，执行<code>svn ci</code>提交即可。</p>`,29)]))}const F=a(t,[["render",h]]);export{c as __pageData,F as default};
